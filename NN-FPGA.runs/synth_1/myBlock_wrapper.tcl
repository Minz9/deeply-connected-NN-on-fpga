# 
# Synthesis run script generated by Vivado
# 

set TIME_start [clock seconds] 
namespace eval ::optrace {
  variable script "E:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.runs/synth_1/myBlock_wrapper.tcl"
  variable category "vivado_synth"
}

# Try to connect to running dispatch if we haven't done so already.
# This code assumes that the Tcl interpreter is not using threads,
# since the ::dispatch::connected variable isn't mutex protected.
if {![info exists ::dispatch::connected]} {
  namespace eval ::dispatch {
    variable connected false
    if {[llength [array get env XILINX_CD_CONNECT_ID]] > 0} {
      set result "true"
      if {[catch {
        if {[lsearch -exact [package names] DispatchTcl] < 0} {
          set result [load librdi_cd_clienttcl[info sharedlibextension]] 
        }
        if {$result eq "false"} {
          puts "WARNING: Could not load dispatch client library"
        }
        set connect_id [ ::dispatch::init_client -mode EXISTING_SERVER ]
        if { $connect_id eq "" } {
          puts "WARNING: Could not initialize dispatch client"
        } else {
          puts "INFO: Dispatch client connection id - $connect_id"
          set connected true
        }
      } catch_res]} {
        puts "WARNING: failed to connect to dispatch server - $catch_res"
      }
    }
  }
}
if {$::dispatch::connected} {
  # Remove the dummy proc if it exists.
  if { [expr {[llength [info procs ::OPTRACE]] > 0}] } {
    rename ::OPTRACE ""
  }
  proc ::OPTRACE { task action {tags {} } } {
    ::vitis_log::op_trace "$task" $action -tags $tags -script $::optrace::script -category $::optrace::category
  }
  # dispatch is generic. We specifically want to attach logging.
  ::vitis_log::connect_client
} else {
  # Add dummy proc if it doesn't exist.
  if { [expr {[llength [info procs ::OPTRACE]] == 0}] } {
    proc ::OPTRACE {{arg1 \"\" } {arg2 \"\"} {arg3 \"\" } {arg4 \"\"} {arg5 \"\" } {arg6 \"\"}} {
        # Do nothing
    }
  }
}

proc create_report { reportName command } {
  set status "."
  append status $reportName ".fail"
  if { [file exists $status] } {
    eval file delete [glob $status]
  }
  send_msg_id runtcl-4 info "Executing : $command"
  set retval [eval catch { $command } msg]
  if { $retval != 0 } {
    set fp [open $status w]
    close $fp
    send_msg_id runtcl-5 warning "$msg"
  }
}
OPTRACE "synth_1" START { ROLLUP_AUTO }
OPTRACE "Creating in-memory project" START { }
create_project -in_memory -part xc7z010clg400-1

set_param project.singleFileAddWarning.threshold 0
set_param project.compositeFile.enableAutoGeneration 0
set_param synth.vivado.isSynthRun true
set_msg_config -source 4 -id {IP_Flow 19-2162} -severity warning -new_severity info
set_property webtalk.parent_dir E:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.cache/wt [current_project]
set_property parent.project_path E:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.xpr [current_project]
set_property XPM_LIBRARIES {XPM_CDC XPM_FIFO XPM_MEMORY} [current_project]
set_property default_lib xil_defaultlib [current_project]
set_property target_language Verilog [current_project]
set_property ip_repo_paths e:/MTP2/neuralNetwork-master/Tut-8/src [current_project]
update_ip_catalog
set_property ip_output_repo e:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.cache/ip [current_project]
set_property ip_cache_permissions {read write} [current_project]
OPTRACE "Creating in-memory project" END { }
OPTRACE "Adding files" START { }
read_mem {
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_0.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_1.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_10.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_11.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_12.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_13.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_14.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_15.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_16.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_17.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_18.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_19.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_2.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_20.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_21.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_22.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_23.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_24.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_25.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_26.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_27.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_28.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_29.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_3.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_4.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_5.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_6.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_7.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_8.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_1_9.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_0.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_1.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_10.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_11.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_12.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_13.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_14.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_15.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_16.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_17.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_18.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_19.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_2.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_20.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_21.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_22.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_23.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_24.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_25.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_26.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_27.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_28.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_29.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_3.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_4.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_5.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_6.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_7.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_8.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_2_9.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_3_0.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_3_1.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_3_2.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_3_3.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_3_4.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_3_5.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_3_6.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_3_7.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_3_8.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_3_9.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_4_0.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_4_1.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_4_2.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_4_3.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_4_4.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_4_5.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_4_6.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_4_7.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_4_8.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/b_4_9.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/sigContent.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_0.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_1.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_10.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_11.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_12.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_13.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_14.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_15.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_16.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_17.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_18.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_19.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_2.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_20.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_21.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_22.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_23.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_24.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_25.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_26.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_27.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_28.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_29.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_3.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_4.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_5.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_6.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_7.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_8.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_1_9.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_0.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_1.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_10.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_11.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_12.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_13.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_14.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_15.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_16.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_17.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_18.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_19.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_2.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_20.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_21.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_22.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_23.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_24.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_25.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_26.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_27.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_28.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_29.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_3.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_4.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_5.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_6.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_7.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_8.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_2_9.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_3_0.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_3_1.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_3_2.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_3_3.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_3_4.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_3_5.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_3_6.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_3_7.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_3_8.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_3_9.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_4_0.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_4_1.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_4_2.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_4_3.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_4_4.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_4_5.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_4_6.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_4_7.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_4_8.mif
  E:/MTP2/neuralNetwork-master/Tut-8/src/fpga/rtl/w_4_9.mif
}
read_verilog -library xil_defaultlib E:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.gen/sources_1/bd/myBlock/hdl/myBlock_wrapper.v
add_files E:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.srcs/sources_1/bd/myBlock/myBlock.bd
set_property used_in_implementation false [get_files -all e:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.gen/sources_1/bd/myBlock/ip/myBlock_axi_dma_0_0/myBlock_axi_dma_0_0.xdc]
set_property used_in_implementation false [get_files -all e:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.gen/sources_1/bd/myBlock/ip/myBlock_axi_dma_0_0/myBlock_axi_dma_0_0_clocks.xdc]
set_property used_in_implementation false [get_files -all e:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.gen/sources_1/bd/myBlock/ip/myBlock_axi_dma_0_0/myBlock_axi_dma_0_0_ooc.xdc]
set_property used_in_implementation false [get_files -all e:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.gen/sources_1/bd/myBlock/ip/myBlock_axi_smc_0/bd_0/ip/ip_1/bd_398e_psr_aclk_0_board.xdc]
set_property used_in_implementation false [get_files -all e:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.gen/sources_1/bd/myBlock/ip/myBlock_axi_smc_0/bd_0/ip/ip_1/bd_398e_psr_aclk_0.xdc]
set_property used_in_implementation false [get_files -all e:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.gen/sources_1/bd/myBlock/ip/myBlock_axi_smc_0/bd_0/ip/ip_5/bd_398e_s00a2s_0_ooc.xdc]
set_property used_in_implementation false [get_files -all e:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.gen/sources_1/bd/myBlock/ip/myBlock_axi_smc_0/bd_0/ip/ip_6/bd_398e_sarn_0_ooc.xdc]
set_property used_in_implementation false [get_files -all e:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.gen/sources_1/bd/myBlock/ip/myBlock_axi_smc_0/bd_0/ip/ip_7/bd_398e_srn_0_ooc.xdc]
set_property used_in_implementation false [get_files -all e:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.gen/sources_1/bd/myBlock/ip/myBlock_axi_smc_0/bd_0/ip/ip_8/bd_398e_m00s2a_0_ooc.xdc]
set_property used_in_implementation false [get_files -all e:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.gen/sources_1/bd/myBlock/ip/myBlock_axi_smc_0/ooc.xdc]
set_property used_in_implementation false [get_files -all e:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.gen/sources_1/bd/myBlock/ip/myBlock_processing_system7_0_0/myBlock_processing_system7_0_0.xdc]
set_property used_in_implementation false [get_files -all e:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.gen/sources_1/bd/myBlock/ip/myBlock_xbar_0/myBlock_xbar_0_ooc.xdc]
set_property used_in_implementation false [get_files -all e:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.gen/sources_1/bd/myBlock/ip/myBlock_auto_pc_0/myBlock_auto_pc_0_ooc.xdc]
set_property used_in_implementation false [get_files -all e:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.gen/sources_1/bd/myBlock/ip/myBlock_rst_ps7_0_100M_0/myBlock_rst_ps7_0_100M_0_board.xdc]
set_property used_in_implementation false [get_files -all e:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.gen/sources_1/bd/myBlock/ip/myBlock_rst_ps7_0_100M_0/myBlock_rst_ps7_0_100M_0.xdc]
set_property used_in_implementation false [get_files -all e:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.gen/sources_1/bd/myBlock/ip/myBlock_rst_ps7_0_100M_0/myBlock_rst_ps7_0_100M_0_ooc.xdc]
set_property used_in_implementation false [get_files -all e:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.gen/sources_1/bd/myBlock/myBlock_ooc.xdc]

OPTRACE "Adding files" END { }
# Mark all dcp files as not used in implementation to prevent them from being
# stitched into the results of this synthesis run. Any black boxes in the
# design are intentionally left as such for best results. Dcp files will be
# stitched into the design at a later time, either when this synthesis run is
# opened, or when it is stitched into a dependent implementation run.
foreach dcp [get_files -quiet -all -filter file_type=="Design\ Checkpoint"] {
  set_property used_in_implementation false $dcp
}
read_xdc dont_touch.xdc
set_property used_in_implementation false [get_files dont_touch.xdc]
set_param ips.enableIPCacheLiteLoad 1

read_checkpoint -auto_incremental -incremental E:/MTP2/neuralNetwork-master/Tut-8/NN-FPGA/NN-FPGA.srcs/utils_1/imports/synth_1/myBlock_wrapper.dcp
close [open __synthesis_is_running__ w]

OPTRACE "synth_design" START { }
synth_design -top myBlock_wrapper -part xc7z010clg400-1
OPTRACE "synth_design" END { }
if { [get_msg_config -count -severity {CRITICAL WARNING}] > 0 } {
 send_msg_id runtcl-6 info "Synthesis results are not added to the cache due to CRITICAL_WARNING"
}


OPTRACE "write_checkpoint" START { CHECKPOINT }
# disable binary constraint mode for synth run checkpoints
set_param constraints.enableBinaryConstraints false
write_checkpoint -force -noxdef myBlock_wrapper.dcp
OPTRACE "write_checkpoint" END { }
OPTRACE "synth reports" START { REPORT }
create_report "synth_1_synth_report_utilization_0" "report_utilization -file myBlock_wrapper_utilization_synth.rpt -pb myBlock_wrapper_utilization_synth.pb"
OPTRACE "synth reports" END { }
file delete __synthesis_is_running__
close [open __synthesis_is_complete__ w]
OPTRACE "synth_1" END { }
